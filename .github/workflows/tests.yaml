name: Test Suite for CoreDNS

on:
  - pull_request

jobs:
  lint-and-unit-tests:
    name: Lint & Unit tests
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install Tox
      run: pip install tox
    - name: Run lint & unit tests
      run: tox

  func-test:
    name: Functional test with MicroK8s
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install MicroK8s
      uses: balchua/microk8s-actions@v0.1.3
      with:
        rbac: 'true'
        storage: 'true'
        dns: 'true'  # required for juju, will adjust later
    - name: Install Dependencies
      run: |
        pip install tox
        sudo snap install charmcraft --channel beta
        sudo snap install juju --classic
        sudo snap install juju-wait --classic
        sudo snap install yq
    - name: Build charm
      run: charmcraft build
    - name: Bootstrap MicroK8s with Juju
      run: sudo juju bootstrap microk8s microk8s
    - name: Add model
      run: sudo juju add-model coredns microk8s
    - name: Deploy CoreDNS
      run: |
        upstream_image=$(yq r metadata.yaml 'resources.coredns-image.upstream-source')
        sudo juju deploy ./coredns.charm --resource coredns-image=$upstream_image --config forward=8.8.8.8
    - name: Wait for stable environment
      run: sudo juju wait -wv
    - name: Tell MicroK8s to use CoreDNS charm
      run: |
        cluster_ip=$(sudo microk8s.kubectl get svc -n coredns coredns -o jsonpath='{..spec.clusterIP}')
        sudo sed -i -e "s/--cluster-dns=.*/--cluster-dns=$cluster_ip/" /var/snap/microk8s/current/args/kubelet
        sudo systemctl restart snap.microk8s.daemon-kubelet
    - name: Run functional test
      run: tox -e func
    - name: Debug Failures
      if: failure()
      run: |
        sudo juju debug-log --replay --no-tail -i coredns
        sudo microk8s.kubectl get all -A
        sudo microk8s.kubectl logs -n coredns -l juju-app=coredns
